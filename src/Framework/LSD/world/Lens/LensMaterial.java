package Framework.LSD.world.Lens;

public enum LensMaterial {

    H_FK61(1, "497816", 1.49513, 1.49543, 1.49694, 1.50123, 1.50157),
    H_FK61B(2, "497816", 1.49513, 1.49543, 1.49694, 1.50123, 1.50157),
    H_FK71(3, "457903", 1.45495, 1.45520, 1.45645, 1.46001, 1.46029),
    H_FK71A(4, "457905", 1.45495, 1.45520, 1.45645, 1.46000, 1.46028),
    H_FK95N(5, "438945", 1.43638, 1.43661, 1.43776, 1.44101, 1.44127),
    H_QK1(6, "470669", 1.46829, 1.46864, 1.47040, 1.47533, 1.47572),
    H_QK3L(7, "487704", 1.48535, 1.48569, 1.48743, 1.49227, 1.49266),
    H_K1(8, "500621", 1.49722, 1.49761, 1.49960, 1.50527, 1.50572),
    H_K2(9, "500660", 1.49813, 1.49850, 1.50040, 1.50571, 1.50613),
    H_K3(10, "505647", 1.50222, 1.50261, 1.50456, 1.51002, 1.51045),
    K4A(11, "508611", 1.50546, 1.50587, 1.50795, 1.51378, 1.51425),
    H_K5(12, "510634", 1.50760, 1.50800, 1.51000, 1.51565, 1.51611),
    H_K6(13, "511605", 1.50855, 1.50896, 1.51105, 1.51700, 1.51748),
    H_K7(14, "515606", 1.51218, 1.51259, 1.51470, 1.52067, 1.52116),
    H_K8(15, "516568", 1.51326, 1.51370, 1.51594, 1.52235, 1.52286),
    H_K9L(16, "517642", 1.51432, 1.51472, 1.51673, 1.52237, 1.52282),
    H_K9LGT(17, "517642", 1.51432, 1.51472, 1.51673, 1.52237, 1.52282),
    H_K9L2(18, "517642", 1.51432, 1.51472, 1.51673, 1.52237, 1.52282),
    H_K10(19, "518590", 1.51549, 1.51592, 1.51810, 1.52428, 1.52479),
    H_K11(20, "526602", 1.52371, 1.52414, 1.52630, 1.53246, 1.53296),
    H_K12(21, "534555", 1.53068, 1.53114, 1.53350, 1.54030, 1.54085),
    H_K50(22, "522595", 1.51982, 1.52024, 1.52241, 1.52860, 1.52910),
    H_K51(23, "523586", 1.52037, 1.52080, 1.52299, 1.52929, 1.52980),
    H_ZPK1A(24, "618634", 1.61503, 1.61550, 1.61791, 1.62478, 1.62533),
    H_ZPK2A(25, "603655", 1.60019, 1.60063, 1.60292, 1.60940, 1.60992),
    H_ZPK3(26, "593673", 1.59078, 1.59122, 1.59341, 1.59960, 1.60010),
    H_ZPK5(27, "593683", 1.59017, 1.59059, 1.59272, 1.59885, 1.59934),
    H_ZPK7(28, "569713", 1.56665, 1.56704, 1.56900, 1.57463, 1.57509),
    H_BaK1(29, "530605", 1.52761, 1.52803, 1.53020, 1.53638, 1.53688),
    H_BaK2(30, "540597", 1.53721, 1.53765, 1.53988, 1.54625, 1.54677),
    H_BaK3(31, "547628", 1.54411, 1.54453, 1.54670, 1.55282, 1.55332),
    H_BaK4(32, "552634", 1.54981, 1.55023, 1.55240, 1.55853, 1.55902),
    H_BaK5(33, "561583", 1.55777, 1.55823, 1.56060, 1.56738, 1.56793),
    H_BaK6(34, "564608", 1.56105, 1.56150, 1.56380, 1.57033, 1.57086),
    H_BaK7(35, "569560", 1.56575, 1.56624, 1.56874, 1.57590, 1.57648),
    H_BaK7GT(36, "569560", 1.56575, 1.56624, 1.56874, 1.57590, 1.57648),
    H_BaK7A(37, "569561", 1.56575, 1.56624, 1.56874, 1.57589, 1.57647),
    H_BaK8(38, "573575", 1.56948, 1.56996, 1.57241, 1.57944, 1.58001),
    H_ZK1(39, "569630", 1.56611, 1.56655, 1.56880, 1.57515, 1.57566),
    H_ZK2(40, "583595", 1.58015, 1.58062, 1.58304, 1.58996, 1.59052),
    H_ZK3(41, "589613", 1.58619, 1.58666, 1.58904, 1.59581, 1.59635),
    H_ZK3A(42, "589613", 1.58619, 1.58666, 1.58904, 1.59581, 1.59635),
    H_ZK4(43, "609589", 1.60567, 1.60617, 1.60872, 1.61601, 1.61660),
    H_ZK5(44, "611558", 1.60785, 1.60838, 1.61107, 1.61881, 1.61944),
    H_ZK6(45, "613586", 1.60954, 1.61005, 1.61262, 1.62000, 1.62060),
    H_ZK7A(46, "613604", 1.60999, 1.61049, 1.61300, 1.62015, 1.62072),
    H_ZK7(47, "613606", 1.61001, 1.61050, 1.61300, 1.62013, 1.62070),
    H_ZK8(48, "614551", 1.61068, 1.61121, 1.61395, 1.62182, 1.62246),
    H_ZK9B(49, "620603", 1.61727, 1.61777, 1.62032, 1.62755, 1.62813),
    H_ZK9A(50, "620603", 1.61727, 1.61777, 1.62032, 1.62755, 1.62813),
    H_ZK10(51, "622567", 1.61877, 1.61929, 1.62200, 1.62974, 1.63037),
    H_ZK10L(52, "623569", 1.61949, 1.62001, 1.62270, 1.63043, 1.63106),
    H_ZK11(53, "639555", 1.63505, 1.63561, 1.63844, 1.64657, 1.64723),
    H_ZK14(54, "603606", 1.60007, 1.60056, 1.60302, 1.61003, 1.61059),
    H_ZK20(55, "617539", 1.61375, 1.61430, 1.61710, 1.62520, 1.62586),
    H_ZK21(56, "623581", 1.61973, 1.62025, 1.62290, 1.63045, 1.63106),
    H_ZK50(57, "607567", 1.60414, 1.60465, 1.60729, 1.61486, 1.61547),
    H_ZK50GT(58, "607567", 1.60414, 1.60465, 1.60729, 1.61486, 1.61547),
    H_LaK1(59, "660574", 1.65600, 1.65656, 1.65940, 1.66750, 1.66816),
    H_LaK2A(60, "692545", 1.68827, 1.68888, 1.69200, 1.70096, 1.70168),
    H_LaK3(61, "747510", 1.74250, 1.74320, 1.74680, 1.75716, 1.75799),
    H_LaK4L(62, "640602", 1.63674, 1.63726, 1.63990, 1.64737, 1.64797),
    H_LaK5A(63, "678555", 1.67420, 1.67479, 1.67779, 1.68641, 1.68710),
    H_LaK6A(64, "694534", 1.68955, 1.69018, 1.69339, 1.70256, 1.70330),
    H_LaK7A(65, "713538", 1.70898, 1.70962, 1.71289, 1.72222, 1.72298),
    H_LaK8A(66, "720503", 1.71568, 1.71636, 1.71987, 1.72998, 1.73080),
    H_LaK8B(67, "720503", 1.71569, 1.71637, 1.71987, 1.73001, 1.73083),
    H_LaK10(68, "651559", 1.64760, 1.64816, 1.65103, 1.65925, 1.65992),
    H_LaK11(69, "665546", 1.66093, 1.66153, 1.66451, 1.67310, 1.67380),
    H_LaK12(70, "697562", 1.69301, 1.69362, 1.69669, 1.70542, 1.70612),
    H_LaK50A(71, "652584", 1.64821, 1.64875, 1.65150, 1.65936, 1.66000),
    H_LaK51A(72, "697555", 1.69297, 1.69358, 1.69668, 1.70552, 1.70624),
    H_LaK52(73, "729547", 1.72510, 1.72575, 1.72904, 1.73844, 1.73920),
    H_LaK53B(74, "755523", 1.75062, 1.75132, 1.75487, 1.76505, 1.76588),
    H_LaK53A(75, "755523", 1.75063, 1.75132, 1.75487, 1.76506, 1.76588),
    H_LaK54(76, "734515", 1.72968, 1.73037, 1.73387, 1.74394, 1.74476),
    H_LaK59A(77, "691548", 1.68716, 1.68777, 1.69089, 1.69976, 1.70048),
    H_LaK61(78, "741526", 1.73673, 1.73741, 1.74087, 1.75080, 1.75161),
    H_LaK67(79, "670517", 1.66610, 1.66671, 1.66988, 1.67905, 1.67979),
    H_KF6(80, "517522", 1.51444, 1.51491, 1.51733, 1.52436, 1.52493),
    H_QF1(81, "548458", 1.54458, 1.54514, 1.54803, 1.55654, 1.55724),
    QF1(82, "548459", 1.54454, 1.54510, 1.54800, 1.55649, 1.55719),
    H_QF3(83, "575415", 1.57090, 1.57155, 1.57488, 1.58476, 1.58558),
    QF3(84, "575413", 1.57090, 1.57155, 1.57490, 1.58482, 1.58564),
    QF5(85, "582420", 1.57804, 1.57869, 1.58203, 1.59189, 1.59271),
    H_QF6A(86, "532488", 1.52847, 1.52898, 1.53162, 1.53935, 1.53999),
    QF6(87, "532488", 1.52845, 1.52897, 1.53162, 1.53935, 1.53999),
    H_QF8(88, "541472", 1.53730, 1.53784, 1.54062, 1.54875, 1.54942),
    QF8(89, "541472", 1.53729, 1.53783, 1.54062, 1.54875, 1.54941),
    H_QF14(90, "596392", 1.59103, 1.59173, 1.59538, 1.60621, 1.60712),
    H_QF50(91, "581409", 1.57722, 1.57789, 1.58132, 1.59145, 1.59228),
    H_QF50A(92, "581408", 1.57722, 1.57788, 1.58131, 1.59149, 1.59233),
    QF50(93, "581409", 1.57723, 1.57789, 1.58131, 1.59145, 1.59229),
    H_QF56(94, "567428", 1.56339, 1.56401, 1.56720, 1.57665, 1.57743),
    H_F1(95, "603380", 1.59874, 1.59948, 1.60328, 1.61462, 1.61557),
    F1(96, "603380", 1.59874, 1.59947, 1.60328, 1.61461, 1.61556),
    H_F2(97, "613370", 1.60806, 1.60883, 1.61279, 1.62463, 1.62562),
    F2(98, "613370", 1.60805, 1.60882, 1.61278, 1.62463, 1.62562),
    F3(99, "617366", 1.61164, 1.61242, 1.61644, 1.62848, 1.62949),
    H_F4(100, "620364", 1.61504, 1.61582, 1.61990, 1.63210, 1.63312),
    F4(101, "620364", 1.61504, 1.61582, 1.61990, 1.63210, 1.63312),
    F5(102, "624359", 1.61925, 1.62005, 1.62420, 1.63663, 1.63768),
    F6(103, "625356", 1.61981, 1.62061, 1.62480, 1.63738, 1.63843),
    F7(104, "636354", 1.63108, 1.63191, 1.63621, 1.64908, 1.65015),
    H_F13(105, "626357", 1.62074, 1.62155, 1.62573, 1.63828, 1.63933),
    F13(106, "626357", 1.62074, 1.62154, 1.62573, 1.63827, 1.63932),
    H_F51(107, "640345", 1.63438, 1.63523, 1.63964, 1.65294, 1.65406),
    H_BaF2(108, "570495", 1.56625, 1.56679, 1.56960, 1.57777, 1.57844),
    H_BaF3(109, "580537", 1.57631, 1.57683, 1.57947, 1.58710, 1.58773),
    H_BaF4(110, "583466", 1.57894, 1.57953, 1.58256, 1.59144, 1.59218),
    BaF4(111, "583465", 1.57897, 1.57955, 1.58260, 1.59151, 1.59227),
    H_BaF5(112, "606439", 1.60153, 1.60217, 1.60550, 1.61533, 1.61615),
    H_BaF6(113, "608462", 1.60409, 1.60471, 1.60790, 1.61725, 1.61802),
    H_BaF7(114, "614400", 1.60959, 1.61031, 1.61400, 1.62495, 1.62586),
    BaF7(115, "614400", 1.60960, 1.61032, 1.61400, 1.62494, 1.62586),
    H_BaF8(116, "626391", 1.62132, 1.62206, 1.62590, 1.63735, 1.63829),
    H_ZBaF1(117, "622532", 1.61877, 1.61933, 1.62219, 1.63047, 1.63115),
    ZBaF2(118, "640483", 1.63566, 1.63627, 1.63950, 1.64891, 1.64969),
    H_ZBaF3(119, "657511", 1.65306, 1.65368, 1.65680, 1.66591, 1.66665),
    H_ZBaF4(120, "664355", 1.65878, 1.65964, 1.66410, 1.67750, 1.67862),
    H_ZBaF5(121, "671473", 1.66679, 1.66745, 1.67090, 1.68098, 1.68181),
    H_ZBaF16(122, "667484", 1.66260, 1.66325, 1.66660, 1.67637, 1.67717),
    ZBaF17(123, "668419", 1.66284, 1.66358, 1.66741, 1.67876, 1.67970),
    H_ZBaF20(124, "702412", 1.69651, 1.69730, 1.70139, 1.71356, 1.71457),
    H_ZBaF21(125, "723380", 1.71781, 1.71869, 1.72325, 1.73685, 1.73798),
    H_ZBaF50(126, "658509", 1.65454, 1.65516, 1.65832, 1.66749, 1.66824),
    ZBaF51(127, "683445", 1.67816, 1.67888, 1.68259, 1.69350, 1.69440),
    H_ZBaF52(128, "670472", 1.66579, 1.66646, 1.66990, 1.67999, 1.68082),
    H_ZF1(129, "648338", 1.64209, 1.64298, 1.64752, 1.66124, 1.66240),
    H_ZF1A(130, "648339", 1.64211, 1.64299, 1.64753, 1.66123, 1.66237),
    ZF1(131, "648338", 1.64210, 1.64297, 1.64753, 1.66124, 1.66239),
    H_ZF2(132, "673322", 1.66661, 1.66756, 1.67252, 1.68751, 1.68879),
    ZF2(133, "673322", 1.66661, 1.66756, 1.67252, 1.68752, 1.68878),
    H_ZF3(134, "717295", 1.71032, 1.71142, 1.71715, 1.73464, 1.73613),
    ZF3(135, "717295", 1.71032, 1.71142, 1.71715, 1.73464, 1.73612),
    H_ZF4A(136, "728283", 1.72082, 1.72198, 1.72803, 1.74656, 1.74811),
    H_ZF4AGT(137, "728283", 1.72082, 1.72198, 1.72803, 1.74656, 1.74811),
    ZF4(138, "728283", 1.72082, 1.72198, 1.72803, 1.74654, 1.74811),
    H_ZF5(139, "740283", 1.73245, 1.73363, 1.73977, 1.75861, 1.76021),
    ZF5(140, "740282", 1.73243, 1.73361, 1.73977, 1.75863, 1.76023),
    H_ZF6(141, "755275", 1.74729, 1.74852, 1.75496, 1.77472, 1.77641),
    ZF6(142, "755275", 1.74729, 1.74852, 1.75496, 1.77472, 1.77640),
    H_ZF7LA(143, "805255", 1.79611, 1.79752, 1.80491, 1.82774, 1.82970),
    H_ZF7LAGT(144, "805255", 1.79611, 1.79752, 1.80491, 1.82774, 1.82970),
    ZF7(145, "806254", 1.79716, 1.79857, 1.80600, 1.82894, 1.83089),
    ZF7L(146, "805255", 1.79611, 1.79752, 1.80491, 1.82773, 1.82968),
    ZF7LGT(147, "805255", 1.79611, 1.79752, 1.80491, 1.82773, 1.82968),
    ZF8(148, "654337", 1.64878, 1.64967, 1.65429, 1.66822, 1.66939),
    H_ZF10(149, "689312", 1.68251, 1.68351, 1.68874, 1.70462, 1.70596),
    ZF10(150, "689312", 1.68250, 1.68351, 1.68874, 1.70460, 1.70594),
    H_ZF11(151, "699301", 1.69221, 1.69326, 1.69875, 1.71547, 1.71689),
    ZF11(152, "699301", 1.69221, 1.69326, 1.69875, 1.71546, 1.71687),
    H_ZF12(153, "762266", 1.75359, 1.75487, 1.76157, 1.78221, 1.78399),
    ZF12(154, "762266", 1.75357, 1.75485, 1.76158, 1.78226, 1.78403),
    H_ZF13(155, "785257", 1.77597, 1.77733, 1.78446, 1.80648, 1.80837),
    H_ZF13GT(156, "785257", 1.77597, 1.77733, 1.78446, 1.80648, 1.80837),
    ZF13(157, "785258", 1.77598, 1.77734, 1.78446, 1.80645, 1.80834),
    H_ZF39(158, "667331", 1.66093, 1.66184, 1.66663, 1.68110, 1.68232),
    H_ZF50(159, "741278", 1.73307, 1.73427, 1.74054, 1.75976, 1.76139),
    ZF50(160, "741278", 1.73307, 1.73427, 1.74054, 1.75975, 1.76139),
    ZF51(161, "785261", 1.77605, 1.77739, 1.78444, 1.80614, 1.80800),
    H_ZF52(162, "847238", 1.83649, 1.83807, 1.84636, 1.87209, 1.87430),
    H_ZF52GT(163, "847238", 1.83649, 1.83807, 1.84636, 1.87209, 1.87430),
    H_ZF52TT(164, "847238", 1.83649, 1.83807, 1.84636, 1.87209, 1.87430),
    H_ZF52A(165, "847238", 1.83649, 1.83807, 1.84636, 1.87209, 1.87430),
    ZF52(166, "847238", 1.83651, 1.83808, 1.84636, 1.87205, 1.87425),
    H_ZF62(167, "923209", 1.91038, 1.91231, 1.92248, 1.95457, 1.95738),
    H_ZF71(168, "808227", 1.79797, 1.79955, 1.80780, 1.83358, 1.83582),
    H_ZF72A(169, "923189", 1.90916, 1.91127, 1.92245, 1.95800, 1.96113),
    H_ZF88(170, "946179", 1.93122, 1.93349, 1.94551, 1.98394, 1.98733),
    H_LaF1(171, "694492", 1.68944, 1.69011, 1.69350, 1.70354, 1.70436),
    H_LaF2(172, "717479", 1.71248, 1.71320, 1.71687, 1.72745, 1.72832),
    H_LaF3B(173, "744449", 1.73906, 1.73984, 1.74386, 1.75563, 1.75660),
    H_LaF4(174, "750350", 1.74319, 1.74419, 1.74932, 1.76461, 1.76589),
    H_LaF4GT(175, "750350", 1.74319, 1.74419, 1.74932, 1.76461, 1.76589),
    H_LaFL5(176, "754375", 1.74774, 1.74867, 1.75350, 1.76785, 1.76906),
    H_LaF6LA(177, "757477", 1.75223, 1.75298, 1.75686, 1.76809, 1.76901),
    H_LaF7(178, "782371", 1.77559, 1.77657, 1.78161, 1.79667, 1.79793),
    H_LaF10LA(179, "788475", 1.78300, 1.78379, 1.78785, 1.79959, 1.80055),
    H_LaF50B(180, "773496", 1.76780, 1.76854, 1.77236, 1.78337, 1.78427),
    H_LaF51(181, "700481", 1.69564, 1.69633, 1.69987, 1.71020, 1.71104),
    H_LaF52(182, "786442", 1.78059, 1.78142, 1.78574, 1.79837, 1.79941),
    H_LaF53(183, "743492", 1.73874, 1.73946, 1.74317, 1.75384, 1.75471),
    H_LaF54(184, "800422", 1.79387, 1.79476, 1.79935, 1.81280, 1.81391),
    H_LaF55(185, "762401", 1.75639, 1.75727, 1.76183, 1.77539, 1.77652),
    H_LaF62(186, "720437", 1.71511, 1.71588, 1.71985, 1.73159, 1.73256),
    H_ZLaF1(187, "802443", 1.79624, 1.79710, 1.80150, 1.81435, 1.81541),
    H_ZLaF2A(188, "803468", 1.79763, 1.79845, 1.80264, 1.81480, 1.81579),
    H_ZLaF3(189, "855366", 1.84856, 1.84964, 1.85524, 1.87194, 1.87333),
    H_ZLaF4LA(190, "911353", 1.90323, 1.90442, 1.91060, 1.92907, 1.93062),
    H_ZLaF50E(191, "804466", 1.79883, 1.79965, 1.80386, 1.81610, 1.81709),
    H_ZLaF50D(192, "804466", 1.79882, 1.79964, 1.80385, 1.81608, 1.81708),
    H_ZLaF51(193, "805396", 1.79849, 1.79943, 1.80433, 1.81879, 1.81998),
    H_ZLaF52A(194, "806410", 1.80026, 1.80119, 1.80593, 1.81992, 1.82107),
    H_ZLaF52(195, "806410", 1.80025, 1.80117, 1.80592, 1.81994, 1.82110),
    H_ZLaF53B(196, "834372", 1.82739, 1.82843, 1.83380, 1.84980, 1.85113),
    H_ZLaF53BGT(197, "834372", 1.82739, 1.82843, 1.83380, 1.84980, 1.85113),
    H_ZLaF55D(198, "835427", 1.82898, 1.82990, 1.83464, 1.84852, 1.84966),
    H_ZLaF55C(199, "835427", 1.82898, 1.82990, 1.83464, 1.84852, 1.84966),
    H_ZLaF56B(200, "806333", 1.79902, 1.80012, 1.80589, 1.82325, 1.82470),
    H_ZLaF66(201, "801350", 1.79427, 1.79533, 1.80080, 1.81718, 1.81856),
    H_ZLaF66GT(202, "801350", 1.79427, 1.79533, 1.80080, 1.81718, 1.81856),
    H_ZLaF68C(203, "883409", 1.87658, 1.87759, 1.88281, 1.89819, 1.89946),
    H_ZLaF68N(204, "883392", 1.87634, 1.87739, 1.88280, 1.89885, 1.90018),
    H_ZLaF68B(205, "883408", 1.87657, 1.87758, 1.88281, 1.89821, 1.89948),
    H_ZLaF69(206, "816465", 1.81074, 1.81157, 1.81585, 1.82828, 1.82928),
    H_ZLaF69A(207, "816466", 1.81075, 1.81158, 1.81585, 1.82828, 1.82928),
    H_ZLaF71(208, "850323", 1.84258, 1.84377, 1.85003, 1.86891, 1.87047),
    H_ZLaF71AGT(209, "850322", 1.84257, 1.84377, 1.85004, 1.86897, 1.87056),
    H_ZLaF75A(210, "904313", 1.89526, 1.89657, 1.90341, 1.92412, 1.92587),
    H_ZLaF75B(211, "904314", 1.89527, 1.89659, 1.90341, 1.92404, 1.92577),
    H_ZLaF76(212, "850301", 1.84191, 1.84320, 1.84989, 1.87020, 1.87191),
    H_ZLaF76A(213, "850300", 1.84191, 1.84319, 1.84988, 1.87024, 1.87196),
    H_ZLaF78B(214, "901371", 1.89353, 1.89466, 1.90048, 1.91784, 1.91928),
    H_ZLaF89L(215, "954323", 1.94513, 1.94648, 1.95349, 1.97465, 1.97642),
    H_ZLaF90(216, "001254", 1.98940, 1.99115, 2.00035, 2.02875, 2.03117),
    H_ZLaF92(217, "003283", 1.99306, 1.99465, 2.00300, 2.02850, 2.03064),
    H_TF3L(218, "613441", 1.60924, 1.60990, 1.61327, 1.62315, 1.62394),
    TF3(219, "612441", 1.60825, 1.60891, 1.61230, 1.62214, 1.62295),
    H_TF5(220, "654395", 1.64919, 1.64997, 1.65396, 1.66573, 1.66671),
    H_TF8(221, "720348", 1.71437, 1.71533, 1.72028, 1.73510, 1.73634),
    D_FK61(222, "497816", 1.49514, 1.49544, 1.49694, 1.50123, 1.50158),
    D_K9(223, "516641", 1.51385, 1.51424, 1.51623, 1.52191, 1.52236),
    D_K59(224, "518635", 1.51508, 1.51550, 1.51753, 1.52323, 1.52370),
    D_PK3(225, "525704", 1.52270, 1.52307, 1.52494, 1.53016, 1.53058),
    D_ZPK1A(226, "621638", 1.61791, 1.61838, 1.62078, 1.62764, 1.62819),
    D_ZK2(227, "583594", 1.58013, 1.58061, 1.58304, 1.58995, 1.59051),
    D_ZK3(228, "589612", 1.58618, 1.58665, 1.58904, 1.59581, 1.59636),
    D_ZK3L(229, "592607", 1.58873, 1.58921, 1.59161, 1.59848, 1.59906),
    D_ZK79(230, "609579", 1.60566, 1.60617, 1.60876, 1.61617, 1.61677),
    D_LaK5(231, "678549", 1.67415, 1.67474, 1.67779, 1.68650, 1.68720),
    D_LaK6(232, "694531", 1.68989, 1.69052, 1.69373, 1.70295, 1.70369),
    D_LaK70(233, "669554", 1.66542, 1.66602, 1.66899, 1.67750, 1.67819),
    D_ZF10(234, "689311", 1.68249, 1.68350, 1.68874, 1.70466, 1.70601),
    D_ZF93(235, "002207", 1.98805, 1.99017, 2.00129, 2.03645, 2.03950),
    D_LaF50(236, "774496", 1.76931, 1.77006, 1.77386, 1.78492, 1.78582),
    D_LaF050(237, "768493", 1.76372, 1.76447, 1.76828, 1.77931, 1.78021),
    D_LaF53(238, "743493", 1.73876, 1.73948, 1.74317, 1.75383, 1.75470),
    D_LaF79(239, "731405", 1.72542, 1.72626, 1.73061, 1.74346, 1.74452),
    D_LaF82L(240, "735488", 1.73030, 1.73102, 1.73472, 1.74537, 1.74623),
    D_ZLaF50(241, "803455", 1.79809, 1.79892, 1.80322, 1.81575, 1.81677),
    D_ZLaF52LA(242, "810410", 1.80410, 1.80503, 1.80982, 1.82386, 1.82502),
    D_ZLaF61(243, "822427", 1.81668, 1.81759, 1.82224, 1.83594, 1.83706),
    D_ZLaF67(244, "884372", 1.87685, 1.87795, 1.88364, 1.90061, 1.90202),
    D_ZLaF81(245, "809410", 1.80294, 1.80385, 1.80863, 1.82266, 1.82383),
    D_ZLaF85A(246, "852401", 1.84592, 1.84691, 1.85204, 1.86717, 1.86842),
    D_ZLaF85L(247, "854406", 1.84746, 1.84844, 1.85351, 1.86850, 1.86972);


    private int sequenceNumber;

    private String lensCode;

    private double nC;
    private double nC2;
    private double nD;
    private double nF;
    private double nF2;
    private double Vd;
    private double Vd2;

    LensMaterial(int sequenceNumber, String lensCode, double nC, double nC2, double nD, double nF, double nF2) {
        this.sequenceNumber = sequenceNumber;
        this.lensCode = lensCode;
        this.nD = nD;
        this.nF = nF;
        this.nF2 = nF2;
        this.nC = nC;
        this.nC2 = nC2;
        this.Vd = (nD - 1) / (nF - nC);
        this.Vd2 = (nD - 1) / (nF2 - nC2);
    }


    public static LensMaterial findViaLensCode(String lensCode) {
        for (LensMaterial lensMaterial :
                values()) {
            if (lensMaterial.lensCode != null && lensMaterial.lensCode.equals(lensCode)) {
                return lensMaterial;
            }
        }
        return null;
    }

    public static LensMaterial findViaLensID(int id){
        for (LensMaterial lensMaterial :
                values()) {
            if (lensMaterial.sequenceNumber == id)
                return lensMaterial;
        }
        return null;
    }

    public int getSequenceNumber() {
        return sequenceNumber;
    }

    public String getLensCode() {
        return lensCode;
    }

    public double getnD() {
        return nD;
    }

    public double getnF() {
        return nF;
    }

    public double getnF2() {
        return nF2;
    }

    public double getnC() {
        return nC;
    }

    public double getnC2() {
        return nC2;
    }

    public double getVd() {
        return Vd;
    }

    public double getVd2() {
        return Vd2;
    }
}
